"use strict";(self.webpackChunkctdlct_177_2=self.webpackChunkctdlct_177_2||[]).push([[7335],{3905:(n,t,e)=>{e.d(t,{Zo:()=>u,kt:()=>d});var a=e(7294);function i(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function r(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function o(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?r(Object(e),!0).forEach((function(t){i(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function p(n,t){if(null==n)return{};var e,a,i=function(n,t){if(null==n)return{};var e,a,i={},r=Object.keys(n);for(a=0;a<r.length;a++)e=r[a],t.indexOf(e)>=0||(i[e]=n[e]);return i}(n,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)e=r[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(i[e]=n[e])}return i}var c=a.createContext({}),l=function(n){var t=a.useContext(c),e=t;return n&&(e="function"==typeof n?n(t):o(o({},t),n)),e},u=function(n){var t=l(n.components);return a.createElement(c.Provider,{value:t},n.children)},s={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(n,t){var e=n.components,i=n.mdxType,r=n.originalType,c=n.parentName,u=p(n,["components","mdxType","originalType","parentName"]),h=l(e),d=i,k=h["".concat(c,".").concat(d)]||h[d]||s[d]||r;return e?a.createElement(k,o(o({ref:t},u),{},{components:e})):a.createElement(k,o({ref:t},u))}));function d(n,t){var e=arguments,i=t&&t.mdxType;if("string"==typeof n||i){var r=e.length,o=new Array(r);o[0]=h;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=n,p.mdxType="string"==typeof n?n:i,o[1]=p;for(var l=2;l<r;l++)o[l]=e[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,e)}h.displayName="MDXCreateElement"},1221:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>r,metadata:()=>p,toc:()=>l});var a=e(7462),i=(e(7294),e(3905));const r={sidebar_position:3},o="\u1ee8ng d\u1ee5ng ng\u0103n x\u1ebfp",p={unversionedId:"adts-stack/apply",id:"adts-stack/apply",title:"\u1ee8ng d\u1ee5ng ng\u0103n x\u1ebfp",description:"doiNhiPhan",source:"@site/docs/adts-stack/apply.md",sourceDirName:"adts-stack",slug:"/adts-stack/apply",permalink:"/docs/adts-stack/apply",draft:!1,editUrl:"https://github.com/thangved/datastructure/docs/adts-stack/apply.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"M\u1ed9t s\u1ed1 ph\xe9p to\xe1n tr\xean Stack",permalink:"/docs/adts-stack/default-function"},next:{title:"T\u1ed5ng quan",permalink:"/docs/adts-queue/intro"}},c={},l=[{value:"doiNhiPhan",id:"doinhiphan",level:2},{value:"readStack",id:"readstack",level:2},{value:"printStack",id:"printstack",level:2},{value:"ktChuoi",id:"ktchuoi",level:2},{value:"tinhGiaTri",id:"tinhgiatri",level:2},{value:"inThaplucphan",id:"inthaplucphan",level:2},{value:"chuyenHauto",id:"chuyenhauto",level:2}],u={toc:l};function s(n){let{components:t,...e}=n;return(0,i.kt)("wrapper",(0,a.Z)({},u,e,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u1ee9ng-d\u1ee5ng-ng\u0103n-x\u1ebfp"},"\u1ee8ng d\u1ee5ng ng\u0103n x\u1ebfp"),(0,i.kt)("h2",{id:"doinhiphan"},"doiNhiPhan"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Nguy\xean m\u1eabu (Prototype)"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"T\xean h\xe0m: doiNhiPhan()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Tham s\u1ed1:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"n"),": s\u1ed1 nguy\xean;"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"pS"),": con tr\u1ecf ng\u0103n x\u1ebfp."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ki\u1ec3u tr\u1ea3 v\u1ec1: kh\xf4ng"))),(0,i.kt)("p",{parentName:"admonition"},"Th\xe2n h\xe0m (Body)"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"\u0110\u1ed5i s\u1ed1 nguy\xean n v\u1ec1 d\u1ea1ng nh\u1ecb ph\xe2n, k\u1ebft qu\u1ea3 l\u01b0u trong ng\u0103n x\u1ebfp ch\u1ec9 b\u1edfi con tr\u1ecf pS"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"void doiNhiPhan(int n, NganXep *pS)\n{\n    khoitao(pS);\n    while (n != 0)\n    {\n        them(n % 2, pS);\n        n /= 2;\n    }\n}\n")),(0,i.kt)("h2",{id:"readstack"},"readStack"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"H\xe0m nh\u1eadp m\u1ed9t ",(0,i.kt)("inlineCode",{parentName:"p"},"Stack")," t\u1eeb b\xe0n ph\xedm.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'void readStack(Stack *pS)\n{\n    makenullStack(pS);\n    int n;\n    scanf("%d", &n);\n    int x;\n    for (int i = 0; i < n; i++)\n    {\n        scanf("%d", &x);\n        push(x, pS);\n    }\n}\n')),(0,i.kt)("h2",{id:"printstack"},"printStack"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"H\xe0m in ",(0,i.kt)("inlineCode",{parentName:"p"},"Stack")," ra m\xe0n h\xecnh.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'void printStack(Stack *pS)\n{\n    while (!emptyStack(*pS))\n    {\n        printf("%d ", top(*pS));\n        pop(pS);\n    }\n    printf("\\n");\n}\n')),(0,i.kt)("h2",{id:"ktchuoi"},"ktChuoi"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"int ktChuoi()\n{\n    char chuoi[100];\n    fgets(chuoi, 100, stdin);\n    fflush(stdin);\n    chuoi[strlen(chuoi) - 1] = '\\0';\n    Stack S;\n    makenullStack(&S);\n    int length = strlen(chuoi);\n    for (int i = 0; i < length; i++)\n    {\n        if (chuoi[i] == '(')\n            push('(', &S);\n        else if (chuoi[i] == ')')\n        {\n            if (emptyStack(S))\n                return 0;\n            pop(&S);\n        }\n    }\n    return emptyStack(S);\n}\n")),(0,i.kt)("h2",{id:"tinhgiatri"},"tinhGiaTri"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float tinhGiatri(char *chuoi)\n{\n    Stack S;\n    makenullStack(&S);\n    int length = strlen(chuoi);\n\n    for (int i = 0; i < length; i++)\n    {\n        if (chuoi[i] >= 48 && chuoi[i] <= 57)\n            push((int)(chuoi[i] - 48), &S);\n        else if (chuoi[i] == '+')\n        {\n            float a = top(S);\n            pop(&S);\n            float b = top(S);\n            pop(&S);\n            push(a + b, &S);\n        }\n        else if (chuoi[i] == '-')\n        {\n            float a = top(S);\n            pop(&S);\n            float b = top(S);\n            pop(&S);\n            push(b - a, &S);\n        }\n        else if (chuoi[i] == '*')\n        {\n            float a = top(S);\n            pop(&S);\n            float b = top(S);\n            pop(&S);\n            push(a * b, &S);\n        }\n        else if (chuoi[i] == '/')\n        {\n            float a = top(S);\n            pop(&S);\n            float b = top(S);\n            pop(&S);\n            push(b / a, &S);\n        }\n    }\n    return top(S);\n}\n")),(0,i.kt)("h2",{id:"inthaplucphan"},"inThaplucphan"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"void inThaplucphan(int n)\n{\n    char Hex[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n    Stack S;\n    makenullStack(&S);\n    while (n != 0)\n    {\n        push(Hex[n % 16], &S);\n        n /= 16;\n    }\n    while (!emptyStack(S))\n    {\n        printf(\"%c\", top(S));\n        pop(&S);\n    }\n}\n")),(0,i.kt)("h2",{id:"chuyenhauto"},"chuyenHauto"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"int isNumber(char c)\n{\n    return (c >= '0' && c <= '9');\n}\n\nint isAb(char c)\n{\n    return (c >= 'a' && c <= 'z');\n}\n\nvoid pushChar(char c, char *s)\n{\n\n    s[strlen(s) + 1] = '\\0';\n    s[strlen(s)] = c;\n}\n\nint isOP(char c)\n{\n    return (c == '+' || c == '-' || c == '*' || c == '/');\n}\n\nvoid chuyenHauto(char *trungto, char *hauto)\n{\n    hauto[0] = '\\0';\n    Stack S;\n    makenullStack(&S);\n    for (int i = 0; i < strlen(trungto); i++)\n    {\n        if (trungto[i] == ' ')\n        {\n        }\n        else if (isNumber(trungto[i]) || isAb(trungto[i]))\n            pushChar(trungto[i], hauto);\n        else if (trungto[i] == '(')\n            push('(', &S);\n        else if (trungto[i] == ')')\n        {\n            while (top(S) != '(')\n            {\n                pushChar(top(S), hauto);\n                pop(&S);\n            }\n            pop(&S);\n        }\n        else if (isOP(trungto[i]))\n        {\n            while (!emptyStack(S) && top(S) != '(' && mucUutien(trungto[i]) <= mucUutien(top(S)))\n            {\n                pushChar(top(S), hauto);\n                pop(&S);\n            }\n            push(trungto[i], &S);\n        }\n    }\n    while (!emptyStack(S))\n    {\n        pushChar(top(S), hauto);\n        pop(&S);\n    }\n}\n")))}s.isMDXComponent=!0}}]);